{"name":"NanoBLASTer","tagline":"Basic Local Alignment and Search Tool for Oxford Nanopore Long Sequences","body":"### NanoBLASTer: Basic Local Alignment and Search Tool for Oxford Nanopore Long Sequences  \r\n**__Current Version: 0.16__**  \r\nRelease Date: October 13, 2015  \r\nPlatform: Linux x64 system\r\n\r\n### Background\r\nOxford Nanopore's new MinION instrument is a handheld single-molecule DNA sequencer using nanopore-technology to produce long reads. However, the quality of the reads has been, to date, lower than other technologies, causing great interest to develop new algorithms that can make use of the data. So far, alignment methods including LAST, BLAST, BWA-MEM and GraphMap have been used to analyze these sequences. However, each of these tools has signi\fcant challenges to use with these data: LAST and BLAST require considerable processing time for high sensitivity, BWA-MEM has the smallest average alignment length, and GraphMap aligns many random strings with moderate accuracy. \r\n\r\n### Results\r\nTo address these challenges we developed a new read aligner called NanoBLASTer speci\fcally designed for long nanopore reads. In experiments resequencing the well-studied S. cerevisiae (yeast) and Escherichia coli (E. coli) genomes, we show that our algorithm produces longer alignments with higher overall sensitivity than LAST, BLAST and BWA-MEM. We also show that the runtime of NanoBLASTer is faster than GraphMap, BLAST and BWA-MEM. Finally, we show that NanoBLASTer is the most specifi\fc of the aligners.\r\n\r\n### Conclusion\r\nUsing our improved aligner, we characterize the accuracy of nanopore reads, and present our insights into the biases and applications of the new sequencing technology.\r\n\r\n### Methods\r\nNanoBLASTer uses fixed size exact matching seeds followed by DP-based extension. However, because of the high error rate of the nanopore sequencing instruments (approximately 10% to 40% base error rate), the seeds that must be used are extremely short and provide relatively little specificity. NanoBLASTer overcomes this challenge and improves the specificity of short seeds by clustering neighboring seeds into mapping regions, and then identifying highly similar segment that we call ANCHORs from the clustered seeds. Extending the top scoring candidate ANCHORs with a block-wise banded sequence alignment algorithm generates the alignments. NanoBLASTer aligns long noisy reads using the following steps:\r\n- Create an inverted K-mer index of the reference genome\r\n- Identify and cluster neighboring K-mers seeds\r\n- Identify and score the candidate ANCHOR\r\n- Extend the ANCHOR into a complete alignment\r\n- Report the alignments of sufficient quality in SAM format\r\n\r\n**Nanopore sequencing data**: [Oxford Nanopore Data for Reference and Reads](http://schatzlab.cshl.edu/data/nanocorr/)\r\n  \r\n### Installation\r\nPlease follow the following steps to install NanoBLASTer from source:\r\n```\r\nClone NanoBLASTer source code: git clone https://github.com/ruhulsbu/NanoBLASTer.git\r\nGo to the NanoBLASTer source directory: cd NanoBLASTer/nano_src \r\nBuild the NanoBLASTer project: make\r\n```  \r\n\r\n### Input specifications\r\n```\r\nUse the following options to run NanoBLASTer:\r\n-C: To specify one of the Parameters: -C10, -C25, or -C50\r\n-r: To specify the name of Reference file (FASTA format)\r\n-i: To specify the name of Reads file (FASTA format)\r\n-o: To specify the prefix of Output file\r\n-k: To specify the size of KMER\r\n-a: To specify the size of ANCHOR\r\n-l: To specify the min number of Clusters\r\n-s: To run the program at higher sensitivity\r\n-n: To specify the Number of reads to be aligned\r\n-h, or -?: To print this Help information.\r\n```\r\n\r\n### Usage examples\r\n```\r\nRun NanoBLASTer in ``fast'' mode (KMER=13, ANCHOR=45 and CLUSTERS=10):\r\n$ ./nanoblaster -C10 -r path/to/reference.fa -i path/to/reads.fa -o output\r\n\r\nRun NanoBLASTer in ``sensitive'' mode (KMER=11, ANCHOR=40 and CLUSTERS=25):\r\n$ ./nanoblaster -C25 -r path/to/reference.fa -i path/to/reads.fa -o output\r\n\r\nRun NanoBLASTer in ``highly sensitive'' mode (KMER=11, ANCHOR=40, CLUSTERS=50 and SENSITIVITY=TRUE):\r\n$ ./nanoblaster -C50 -r path/to/reference.fa -i path/to/reads.fa -o output\r\n\r\nRun NanoBLASTer with default KMER=11, ANCHOR=40 and CLUSTERS=10:\r\n$ ./nanoblaster -r path/to/reference.fa -i path/to/reads.fa -o output\r\n\r\nRun NanoBLASTer with KMER=13, ANCHOR=45 and CLUSTERS=25 using default parameters at higher sensitivity:\r\n$ ./nanoblaster -r path/to/reference.fa -i path/to/reads.fa -o output -k13 -a45 -l25 -s\r\n```\r\n* It is not recommended to use any additional parameters except input and output with C10, C25 or C50. But if we want to force additional parameters then we can add them after mentioning one of these sensitivity modes.\r\n\r\n### Optimize configurations\r\nEdit the configurations in constant.h file to optimize NanoBLASTer alignment manually. Editing the following constants will have an overall impact on the alignment quality of NanoBLASTer:\r\n- To increase/decrease the gap penalty change the constant \"GAP\" (positive number)\r\n- To increase/decrease the gap open penalty change the constant \"GAP_OPEN\"\r\n- To increase/decrease the base mismatch weight change the constant \"MISMATCH\" (negative number)\r\n- To increase/decrease the base matching weight change the constant \"WEIGHT\"\r\n- To change the percentage of identity match for sequence alignment change the constant \"KBAND_PERCENT_MATCH\"\r\n- To change the size of read length considered for alignment change \"MIN_READ_LEN\", or \"MAX_READ_LEN\"\r\n- If the genome is circular the constant \"CIRCULAR\" must be 0  \r\n\r\nEditing the following constants will have an impact on the sensitivity and runtime of NanoBLASTer. These constants have been defined with the default values for NanoBLASTer. Some of these default values have been optimized for \"fast\", \"sensitive\" and \"highly sensitive\" mode. So these three configured modes will not be affected even if the following constants are edited. It is recommended to define -k, -a and -l when the following constants are changed manually:\r\n- To increase/decrease the seed tuple distance in a cluster change the constant SEED_TUPLE_DIST\r\n- To increase/decrease the primary anchor word size change the constant PRIM_ANCHOR_WORD\r\n- To increase/decrease the secondary anchor word size change the constant SECND_ANCHOR_WORD\r\n- To increase/decrease the primary anchor percent of identity change the constant PRIM_ANCHOR_PIDENT \r\n- To increase/decrease the secondary anchor percent of identity change the constant SECND_ANCHOR_PIDENT\r\n- To increase/decrease the size of block for banded sequence alignment change the constant FRAGMENT_SIZE\r\n\r\nFinally, define -k, -a and -l while running the ./nanoblaster executable with these changed constants to get the expected performance.\r\n\r\nCurrently, the sensitivity modes (C10, C25 and C25) are defined to align data set with very low accuracy (~65%). If the accuracy of the data set is ~75% then we need to modify the KMER and/or ANCHOR size when mentioning the sensitivity mode to get better runtime performance.  \r\n\r\n### Contact information\r\nPlease send your comments or bug reports to moamin@cs.stonybrook.edu \r\n","google":"UA-65164000-1","note":"Don't delete this file! It's used internally to help with page regeneration."}